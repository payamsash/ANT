# Default parameters for neurofeedback

NF_modality:
  sensor_power: 
  # Track the spectral power at the desired frequency over the selected electrodes.
    frange: [8, 13]
    method: "welch" # other options are fft and multitaper
    relative: False

  band_ratio: 
  # Track the power ratio between two frequency ranges over selected electrodes.
    frange_1: [8, 13] # First frequecy range
    frange_2: [4, 8] # Second frequecy range
    method: "welch" # other options are fft and multitaper

  source_power:
  # Track the activation in a desired brain label.
    frange: [8, 13]
    brain_label: "pericalcarine-lh"
    atlas: "aparc" # The parcellation to use, e.g., 'aparc' or 'aparc.a2009s'.
    method: "dSPM"

  sensor_connectivity:
  # Track the connection strength between multiple channels in sensor space.
    frange: [8, 13]
    channels: [["C3", "C4"], ["F3", "F4"]] # desired channel names, should be a list of two lists.
    method: "coh" # Connectivity measure(s) to compute. These can be ['corr', 'coh', 'mic', 'mim', 'plv', 'ciplv', 'pli', 'wpli', 'gc', 'gc_tr']. 
    mode: "cwt_morlet" # Time-frequency decomposition method. Can be either: ‘multitaper’, or ‘cwt_morlet’. 
  
  source_connectivity:
  # Track the connection strength between two brain labels in source space.
    frange: [8, 13]
    brain_label_1: "transversetemporal-lh" # First brain label.
    brain_label_2: "transversetemporal-rh" # Second brain label.
    atlas: "aparc" # The parcellation to use, e.g., 'aparc' or 'aparc.a2009s'.
    method: "coh" # Connectivity measure(s) to compute. These can be ['corr', 'coh', 'mic', 'mim', 'plv', 'ciplv', 'pli', 'wpli', 'gc', 'gc_tr']. 
    mode: "cwt_morlet" # Time-frequency decomposition method. Can be either: ‘multitaper’, or ‘cwt_morlet’. 

  sensor_graph:
  # Track the connection strength between two channels using graph method.
    frange: [8, 13]
    channels: [["C3", "C4"], ["F3", "F4"]] # desired channel names, should be a list of two lists.
    dist_type: "sqeuclidean" # Type of pairwise distance between variables. See scipy.spatial.distance.pdist for the possible options.
    alpha: 1 # Regularization parameter acting on the log barrier
    beta: 1 # Regularization parameter controlling the density of the graph

  source_graph:
  # Track the connection strength between two brain labels using graph method.
    frange: [8, 13]
    brain_label_1: "transversetemporal-lh" # First brain label.
    brain_label_2: "transversetemporal-rh" # Second brain label.
    atlas: "aparc" # The parcellation to use, e.g., 'aparc' or 'aparc.a2009s'.
    dist_type: "sqeuclidean" # Type of pairwise distance between variables. See scipy.spatial.distance.pdist for the possible options.
    alpha: 1 # Regularization parameter acting on the log barrier
    beta: 1 # Regularization parameter controlling the density of the graph

  entropy:
  # Track the entropy
    frange: [8, 13]
    method: "Spectral" # The method to compute tthe entropy -> {"AppEn", "SampEn", "Spectral", "SVD"} 
    psd_method: "welch" # Method used for the estimation of the Power Spectral Density (PSD). Valid methods are: 'welch', 'multitaper' or 'fft'.

  argmax_freq:
  # Track the frequency at which the maximum activation occurs.
    frange: [8, 13]
    method: "welch" # Spectral estimation method "welch" or "multitaper"

  individual_peak_power:
  # Track the power around the frequency with maximum activation.
    frange: [8, 13]  
    method: "welch"

  cfc_sensor:
    method: "tort"
    frange_1: [8, 13]
    frange_2: [30, 45]